{"version":3,"file":"index.es.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/index.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles.css'\n\nexport default class EPGBoard extends Component {\n  static propTypes = {\n    height: PropTypes.number,\n    channelPrograms: PropTypes.arrayOf(PropTypes.object),\n    channels: PropTypes.arrayOf(PropTypes.object),\n    hourWidth: PropTypes.number,\n    channelWidth: PropTypes.number,\n    channelHeight: PropTypes.number\n  }\n\n  static defaultProps = {\n    height: 600,\n    channelPrograms: [],\n    channels: [],\n    hourWidth: 120,\n    channelWidth: 120,\n    channelHeight: 80\n  }\n\n  getProgramWidth = (start, end) => {\n    const { hourWidth } = this.props\n    const timeDiff = new Date(end).getTime() - new Date(start).getTime()\n    const width = ((timeDiff / 1000) / (60 * 60)) * hourWidth\n    console.log('width', width)\n    return width\n  }\n\n  getStartingTime = () => {\n    const { channelPrograms } = this.props\n    const startingTime = channelPrograms.reduce((start, channel) => {\n      if (channel.programs && channel.programs.length) {\n        const firstProgramStart = new Date(channel.programs[0].startTime).getTime()\n        if (start > firstProgramStart) {\n          start = firstProgramStart\n        }\n      }\n      return start\n    }, channelPrograms[0].programs[0].startTime)\n    return startingTime\n  }\n\n  render() {\n    const { height, channelPrograms, channels, channelWidth, channelHeight } = this.props\n    const startingTime = this.getStartingTime()\n    return (\n      <div className={styles.container} style={{ height: `${height}px` }}>\n        <div className={styles.channelList} style={{ width: `${channelWidth}px` }}>\n          {channels.map(channel =>\n            (<div className={styles.channelTitle} style={{ height: `${channelHeight}px` }}>\n              <p>{channel.name}</p>\n            </div>\n            ))\n          }\n        </div>\n        <div className={styles.programlList}>\n          {channels.map(channel => {\n            const selectedChannel = channelPrograms.find(item => item.channelId === channel.id)\n            const isPostStart = selectedChannel.programs && selectedChannel.programs.length ? new Date(selectedChannel.programs[0].startTime).getTime() > startingTime : false\n            console.log('postion', isPostStart, this.getProgramWidth(startingTime, selectedChannel.programs[0].startTime))\n            return <div className={styles.channelPrograms} style={{ height: `${channelHeight}px` }} >\n              {isPostStart ? <div className={styles.programCell} style={{ height: `${channelHeight}px`, width: `${this.getProgramWidth(startingTime, selectedChannel.programs[0].startTime) - 2}px` }}  >\n                <p>NA</p>\n              </div> : null}\n              {(selectedChannel ? (selectedChannel.programs || []) : []).map(program =>\n                <div className={styles.programCell} style={{ height: `${channelHeight}px`, width: `${this.getProgramWidth(program.startTime, program.endTime) - 2}px`, left: `${this.getProgramWidth(startingTime, program.startTime)}px` }}>\n                  <p>{program.name}</p>\n                </div>\n              )}\n            </div>\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n"],"names":["EPGBoard","getProgramWidth","start","end","hourWidth","props","timeDiff","Date","getTime","width","log","getStartingTime","channelPrograms","startingTime","reduce","channel","programs","length","firstProgramStart","startTime","height","channels","channelWidth","channelHeight","styles","container","channelList","map","channelTitle","name","programlList","selectedChannel","find","item","channelId","id","isPostStart","programCell","program","endTime","left","Component","propTypes","PropTypes","number","arrayOf","object","defaultProps"],"mappings":"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"}